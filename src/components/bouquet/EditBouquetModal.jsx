import React, { useState, useEffect } from 'react';
import { db } from '../../firebase/firebase';
import { collection, getDocs, query, where, orderBy } from 'firebase/firestore';

const EditBouquetModal = ({ initialData, onClose, onSave }) => {
    const [loading, setLoading] = useState(true);

    const [whatsappNumber, setWhatsappNumber] = useState(initialData.whatsappNumber || '');

    // --- –ù–û–í–û–ï: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ü–µ–Ω –¥–æ—Å—Ç–∞–≤–∫–∏ ---
    const [deliveryOptions, setDeliveryOptions] = useState(
        initialData.deliveryOptions || {
            delivery: 2500,
            pickup: 0,
        }
    );

    useEffect(() => {
        const fetchFlowers = async () => {
            setLoading(true);
            try {
                const flowersQuery = query(collection(db, 'master_flowers'), where('isActive', '==', true), orderBy('name'));
                const flowersSnap = await getDocs(flowersQuery);
                setMasterFlowers(flowersSnap.docs.map(doc => ({ id: doc.id, ...doc.data() })));
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤:", error);
            }
            setLoading(false);
        };
        fetchFlowers();
    }, []);









    // --- –ù–û–í–û–ï: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –¥–æ—Å—Ç–∞–≤–∫–∏ ---
    const handleDeliveryChange = (option, value) => {
        setDeliveryOptions(prev => ({
            ...prev,
            [option]: Number(value)
        }));
    };

    const handleSaveClick = () => {
        onSave({
            flowers: selectedFlowers,
            wrappings: selectedWrappings,
            whatsappNumber: whatsappNumber,
            deliveryOptions: deliveryOptions // --- –ù–û–í–û–ï: –ü–µ—Ä–µ–¥–∞–µ–º –æ–ø—Ü–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
        });
    };

    return (
        <div className="fixed inset-0 bg-black/50 z-50 flex items-center justify-center p-4">
            <div className="bg-white w-full max-w-2xl rounded-lg p-6 relative max-h-[90vh] overflow-y-auto">
                <button onClick={onClose} className="absolute right-4 top-4 text-gray-500 hover:text-black">‚úï</button>
                <h2 className="text-lg font-semibold mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –±—É–∫–µ—Ç–∞</h2>

                {loading ? <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞...</p> : (
                    <>
                        {/* ... —Ä–∞–∑–¥–µ–ª—ã –¶–í–ï–¢–´ –∏ –£–ü–ê–ö–û–í–ö–ò –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ... */}

                        {/* --- –ù–û–í–´–ô –†–ê–ó–î–ï–õ: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ --- */}
                        <div className="border-t pt-4 mt-4">
                            <h3 className="text-base font-medium mb-2">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏</h3>
                            <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                                <div>
                                    <label className="text-sm font-medium text-gray-700">–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ (‚Ç∏)</label>
                                    <input
                                        type="number"
                                        className="w-full mt-1 border px-2 py-1 text-sm rounded"
                                        value={deliveryOptions.delivery}
                                        onChange={(e) => handleDeliveryChange('delivery', e.target.value)}
                                    />
                                </div>
                                <div>
                                    <label className="text-sm font-medium text-gray-700">–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–∞–º–æ–≤—ã–≤–æ–∑–∞ (‚Ç∏)</label>
                                    <input
                                        type="number"
                                        className="w-full mt-1 border px-2 py-1 text-sm rounded"
                                        value={deliveryOptions.pickup}
                                        onChange={(e) => handleDeliveryChange('pickup', e.target.value)}
                                    />
                                    <p className="text-xs text-gray-500 mt-1">–û–±—ã—á–Ω–æ 0, –µ—Å–ª–∏ —Å–∞–º–æ–≤—ã–≤–æ–∑ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π.</p>
                                </div>
                            </div>
                        </div>


                        {/* –†–∞–∑–¥–µ–ª WhatsApp */}
                        <div className="border-t pt-4 mt-4">
                            <h3 className="text-sm font-medium mb-2">–ù–æ–º–µ—Ä –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ WhatsApp</h3>
                            <input type="tel" className="w-full border px-2 py-1 text-sm rounded" value={whatsappNumber} onChange={(e) => setWhatsappNumber(e.target.value.replace(/\D/g, ''))} placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 77083180696"/>
                            <p className="text-xs text-gray-500 mt-1">–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –±–µ–∑ "+", –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Å–∫–æ–±–æ–∫.</p>
                        </div>
                    </>
                )}

                <div className="text-right mt-6">
                    <button onClick={handleSaveClick} className="bg-green-600 text-white px-5 py-2 rounded text-sm font-semibold hover:bg-green-700 disabled:bg-gray-400" disabled={loading}>
                        üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                    </button>
                </div>
            </div>
        </div>
    );
};
export default EditBouquetModal;